layui.define(["FormField","FormFieldActions","laydate"],function(exports){let FormField=layui.FormField;let FormFieldActions=layui.FormFieldActions;let laydate=layui.laydate;class FormFieldDate extends FormField{constructor(t={}){super(t);this.layType="date";this.layFormat="yyyy-MM-dd";this.yunjFormat="Y-m-d"}defineExtraArgs(){let t=this;return{placeholder:"",min:"",max:"",range:false,shortcuts:[]}}handleArgs(t){let e=this;t=e.handleArgsVerify(t);return t}handleArgsVerify(t){let e=this;let a=t.type;let i=t.verify;let l=t.range;if(l===false){if(i.indexOf(a)===-1)i+=(i?"|":"")+a}else{if(i.indexOf("timeRange")===-1)i+=(i?"|":"")+("timeRange:"+a)}t.verify=i;return t}defineBoxHtml(){let t=this;return`<div class="layui-form-item yunj-form-item yunj-form-date yunj-form-${t.args.type}" id="${t.id}">__layout__</div>`}layoutControl(){let t=this;let e="<i class='layui-icon layui-icon-date'></i>";if(t.isRange()){e+=`<input type="text" class="start" placeholder="开始时间" autocomplete="off" ${t.args.readonly?"readonly":""}>
                                <span class="range">到</span>
                                <input type="text" class="end" placeholder="结束时间" autocomplete="off" ${t.args.readonly?"readonly":""}>`}else{e+=`<input type="text" placeholder="${t.args.placeholder}" autocomplete="off" ${t.args.readonly?"readonly":""}>`}e=`<div class="show-box ${t.isRange()?"range":""}">${e}</div>`;return`<div class="layui-input-inline yunj-form-item-control">${e}</div>`}setValue(a=""){let i=this;if(i.isRange()){if(!yunj.isObj(a)){a=yunj.isJson(a)?JSON.parse(a):{}}let t=a.start||"";let e=a.end||"";i.setInputValue(`input.start`,t);i.setInputValue(`input.end`,e)}else{i.setInputValue(`input`,a)}}setInputValue(t,e){let a=this;if(!yunj.isScalar(e))e="";if(yunj.isTimestamp(e))e=yunj.timestampFormat(e,a.yunjFormat);a.boxEl.find(t).val(e)}getValue(){let a=this;if(a.isRange()){let t=a.boxEl.find(`input.start`).val();let e=a.boxEl.find(`input.end`).val();return!t&&!e?"":{start:a.boxEl.find(`input.start`).val(),end:a.boxEl.find(`input.end`).val()}}else{return a.boxEl.find(`input`).val()}}async renderDone(){let that=this;if(that.args.readonly)return;let args={type:that.layType,format:that.layFormat,trigger:"click",position:"absolute"};if(that.args.min)args.min=that.args.min;if(that.args.max)args.max=that.args.max;if(that.isRange()){args.elem=`#${that.id} .show-box`;args.range=[`#${that.id} .show-box input.start`,`#${that.id} .show-box input.end`];args.rangeLinked=true}else{args.elem=`#${that.id} .show-box input`}if(that.args.shortcuts&&yunj.isArray(that.args.shortcuts)&&that.args.shortcuts.length>0){let shortcuts=[];for(let i=0;i<that.args.shortcuts.length;i++){let item=that.args.shortcuts[i];if(yunj.isString(item.value)&&!yunj.isDatetimeVal(item.value)){item.value=eval(item.value)}shortcuts.push(item)}args.shortcuts=shortcuts}laydate.render(args);that.fieldActions=new FormFieldActions({fieldObj:that,fieldValueElSelector:`.show-box`,fieldValueElNoAutoIndent:true,actions:{contentClear:null}})}defineExtraEventBind(){let e=this;if(e.isReadonly())return;if(!e.isRange()){e.boxEl.on("click",".show-box",function(t){e.boxEl.find(`input`).click()});e.boxEl.on("click",".show-box input",function(t){t.stopPropagation()})}}isRange(){return!!this.args.range}}exports("FormFieldDate",FormFieldDate)});